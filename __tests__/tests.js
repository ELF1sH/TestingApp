import {multiply} from "../script.js";

test("Simple multiplication", () => {
    expect(multiply("3", "5")).toBe("15")
    expect(multiply("15", "295")).toBe("4425")
})

test("Multiplication with zero", () => {
    expect(multiply("34545", "0")).toBe("0")
    expect(multiply("0", "234324")).toBe("0")
    expect(multiply("0", "0")).toBe("0");
})

test("Multiplication with invalid symbols", () => {
    expect(() => {multiply("3f", "34")}).toThrow(Error('Invalid character'))
    expect(() => {multiply("345", "654654353g")}).toThrow(Error('Invalid character'))
    expect(() => {multiply("Hello", "world!")}).toThrow(Error('Invalid character'))
    expect(() => {multiply("34.234", "123")}).toThrow(Error('Invalid character'))
    expect(() => {multiply("34,234", "123")}).toThrow(Error('Invalid character'))
})

test("Huge numbers multiplication", () => {
    expect(multiply("57754557855345435", "235325235252525")).toBe("13591104914214730219973330973375")
    expect(multiply("8162591832756298357698435634598265439856243985432531658356439285623985437256239845643754238",
        "4760329465980659827346543298564327562084397623895743089670326872430962347609346730694237609423603948674"))
        .toBe("38856626420242885133894068714962636031252810330947412625596948289493703102116268232098662046824748353463348158624929666081250627572817004045146310430108443694854399846006418933047494722421980412")
    expect(multiply("8162591832756298357698435634598265439856243985432531658356439285623985437256239845643754238816259183275629835769843563459826543985624398543253165835643928562398543725623984564375423881625918327562983576984356345982654398562439854325316583564392856239854372562398456437542388162591832756298357698435634598265439856243985432531658356439285623985437256239845643754238",
        "4760329465980659827346543298564327562084397623895743089670326872430962347609346730694237609423603948674816259183275629835769843563459826543985624398543253165835643928562398543725623984564375423847603294659806598273465432985643275620843976238957430896703268724309623476093467306942376094236039486748162591832756298357698435634598265439856243985432531658356439285623985437256239845643754238"))
        .toBe("38856626420242885133894068714962636031252810330947412625596948289493703102116268232098662050710410995494299462557154520159392282424713679845567431206751714729008847435651475835564527167517774196563175725754416095624193429274462030506955410630719028337274185213444515551699972967060104524565056110141719054096819414077489843689867530580164520197987379140836927410239937300351649132758968074747041204444168410176134624258870219564344515949260579064682462352910264940663651123940676709837807576486897752938379809022316267856487741203655441205676403081378826601651789447063774575812261130009465889242959673236072030105135176200714427368115582516354391678354196352907446632058365352283460244996534676856376841866460734291804199587533599009740845738942960644")
})

test("Negative numbers multiplication", () => {
    expect(multiply("-3", "5")).toBe("-15")
    expect(multiply("15", "-295")).toBe("-4425")
    expect(multiply("-23424324324", "-234242424")).toBe("5486970510215921376")
})

test("Multiplication with numbers starting with zeros", () => {
    expect(multiply("03", "5")).toBe("15")
    expect(multiply("0000000000000000000000015", "0000000000000000000000000000000000000295")).toBe("4425")
})